[
    {
      "name": "Transfer",
      "inputs": [
        {
          "type": "address",
          "name": "sender",
          "indexed": true
        },
        {
          "type": "address",
          "name": "receiver",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "value",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Approval",
      "inputs": [
        {
          "type": "address",
          "name": "owner",
          "indexed": true
        },
        {
          "type": "address",
          "name": "spender",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "value",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "ClaimDividends",
      "inputs": [
        {
          "type": "address",
          "name": "to",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "value",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "totalDividends",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "DistributeDividends",
      "inputs": [
        {
          "type": "address",
          "name": "sender",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "value",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "totalDividends",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "initializeERC20",
      "outputs": [],
      "inputs": [
        {
          "type": "string",
          "name": "_name"
        },
        {
          "type": "string",
          "name": "_symbol"
        },
        {
          "type": "uint256",
          "name": "_decimals"
        },
        {
          "type": "uint256",
          "name": "_supply"
        },
        {
          "type": "address",
          "name": "_dividend_token"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 357248
    },
    {
      "name": "totalSupply",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1181,
      "constant": true
    },
    {
      "name": "allowance",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_owner"
        },
        {
          "type": "address",
          "name": "_spender"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "gas": 1519,
      "constant": true
    },
    {
      "name": "distributeDividends",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 80378
    },
    {
      "name": "getExcessBalance",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 3630,
      "constant": true
    },
    {
      "name": "dividendsOf",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_owner"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "gas": 4328,
      "constant": true
    },
    {
      "name": "claimDividends",
      "outputs": [],
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 412513
    },
    {
      "name": "transfer",
      "outputs": [
        {
          "type": "bool",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_to"
        },
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 898899
    },
    {
      "name": "transferFrom",
      "outputs": [
        {
          "type": "bool",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_from"
        },
        {
          "type": "address",
          "name": "_to"
        },
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 1347191
    },
    {
      "name": "approve",
      "outputs": [
        {
          "type": "bool",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_spender"
        },
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 38123
    },
    {
      "name": "mint",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_to"
        },
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 487884
    },
    {
      "name": "burn",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 899818
    },
    {
      "name": "burnFrom",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_to"
        },
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 1348054
    },
    {
      "name": "name",
      "outputs": [
        {
          "type": "string",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 8093,
      "constant": true
    },
    {
      "name": "symbol",
      "outputs": [
        {
          "type": "string",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 7146,
      "constant": true
    },
    {
      "name": "decimals",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1751,
      "constant": true
    },
    {
      "name": "totalDividends",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1781,
      "constant": true
    },
    {
      "name": "totalClaimedTokenDividends",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1811,
      "constant": true
    },
    {
      "name": "totalTokenDividends",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1841,
      "constant": true
    },
    {
      "name": "dividend_token",
      "outputs": [
        {
          "type": "address",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1871,
      "constant": true
    },
    {
      "name": "withdraw_address",
      "outputs": [
        {
          "type": "address",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1901,
      "constant": true
    },
    {
      "name": "balanceOf",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "gas": 2085,
      "constant": true
    },
    {
      "name": "total_supply",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1961,
      "constant": true
    },
    {
      "name": "minter",
      "outputs": [
        {
          "type": "address",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1991,
      "constant": true
    },
    {
      "name": "lastDividends",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "gas": 2175,
      "constant": true
    }
],
"bytecode": "0x61121d56600436101561000d57611213565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052637c6c400b60005114156103285734156100ba57600080fd5b60606004356004016101403760406004356004013511156100da57600080fd5b60406024356004016101c03760206024356004013511156100fa57600080fd5b608435602051811061010b57600080fd5b506308c379a0610220526020610240526029610260527f43616e6e6f7420696e697469616c697a6520636f6e7472616374206d6f726520610280527f7468616e206f6e636500000000000000000000000000000000000000000000006102a05261026050600b541561017e57608461023cfd5b606435604e6044351061019057600080fd5b604435600a0a80820282158284830414176101aa57600080fd5b809050905090506102e05261014080600060c052602060c020602082510161012060006003818352015b826101205160200211156101e757610209565b61012051602002850151610120518501555b81516001018083528114156101d4575b5050505050506101c080600160c052602060c020602082510161012060006002818352015b8261012051602002111561024157610263565b61012051602002850151610120518501555b815160010180835281141561022e575b5050505050506044356002556102e05160083360e05260c052604060c020556102e051600a5533600b5560843560065560206103a0604463095ea7b36103005230610320527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6103405261031c60006006545af16102e057600080fd5b601f3d116102ed57600080fd5b6000506103a0506102e0516103c0523360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206103c0a3005b6318160ddd600051141561034f57341561034157600080fd5b600a5460005260206000f350005b63dd62ed3e60005114156103b657341561036857600080fd5b600435602051811061037957600080fd5b50602435602051811061038b57600080fd5b50600960043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b600015610446575b6101605261014052600354600c6101405160e05260c052604060c02054808210156103e857600080fd5b8082039050905060086101405160e05260c052604060c02054808202821582848304141761041557600080fd5b8090509050905069d3c21bcecceda1000000808061043257600080fd5b820490509050600052600051610160515650005b600015610595575b61018052610140526101605261016051151561046a5761018051565b602061028060646323b872dd6101c052610140516101e052306102005261016051610220526101dc60006006545af16104a257600080fd5b601f3d116104af57600080fd5b60005061028050600380546101605169d3c21bcecceda100000080820282158284830414176104dd57600080fd5b80905090509050600a5460083060e05260c052604060c020548082101561050357600080fd5b80820390509050808061051557600080fd5b82049050905081818301101561052a57600080fd5b80820190509050815550600580546101605181818301101561054b57600080fd5b80820190509050815550610160516102a0526003546102c052610140517f7a04e90c865097731fd2a22aa43af331b1b11bcabe30590c7c1faf8b987e45a860406102a0a261018051565b633243c79160005114156105d05734156105ae57600080fd5b33610140526004356101605261016051610140516006580161044e565b600050005b6000156106a7575b61014052602061020060246370a0823161018052306101a05261019c6006545afa61060257600080fd5b601f3d1161060f57600080fd5b600050610200516005546004548082101561062957600080fd5b808203905090508082101561063d57600080fd5b80820390509050610160526101405161016051610180516101a0516101c0516101e051610200513061024052610160516102605261026051610240516006580161044e565b610200526101e0526101c0526101a05261018052610160526101405260005061014051565b63888b042f60005114156107335734156106c057600080fd5b60206101c060246370a0823161014052306101605261015c6006545afa6106e657600080fd5b601f3d116106f357600080fd5b6000506101c0516005546004548082101561070d57600080fd5b808203905090508082101561072157600080fd5b8082039050905060005260206000f350005b6265318b600051141561078457341561074b57600080fd5b600435602051811061075c57600080fd5b506004356101405261014051600658016103be565b6101a0526101a05160005260206000f350005b6000156108d4575b6101605261014052306101405114156107a55761016051565b6101405161016051600658016105d8565b61016052610140526000506101405161016051610180516101a0516101c051610140516102005261020051600658016103be565b610260526101c0526101a052610180526101605261014052610260516101c052600354600c6101405160e05260c052604060c0205560006101c05118156108ce576020610320604463a9059cbb61028052610140516102a0526101c0516102c05261029c60006006545af161085e57600080fd5b601f3d1161086b57600080fd5b60005061032050600480546101c05181818301101561088957600080fd5b808201905090508155506101c0516103405260035461036052610140517f212c5c75ed4425b407ddf7fdba72d846fda739fc762929aab1e88fb9ee3ee4c86040610340a25b61016051565b63668038e060005114156109045734156108ed57600080fd5b3361014052610140516006580161078c565b600050005b63a9059cbb6000511415610a0a57341561091d57600080fd5b600435602051811061092e57600080fd5b503361014052610140516006580161078c565b6000506101405161016051610180516004356101c0526101c0516006580161078c565b61018052610160526101405260005060083360e05260c052604060c02080546024358082101561099357600080fd5b80820390509050815550600860043560e05260c052604060c02080546024358181830110156109c157600080fd5b8082019050905081555060243561022052600435337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610220a3600160005260206000f350005b6323b872dd6000511415610bad573415610a2357600080fd5b6004356020518110610a3457600080fd5b506024356020518110610a4657600080fd5b5060043561014052610140516006580161078c565b6000506101405161016051610180516024356101c0526101c0516006580161078c565b6101805261016052610140526000506101405161016051610180516101a0516101c0516101e051610200513361024052610240516006580161078c565b610200526101e0526101c0526101a052610180526101605261014052600050600860043560e05260c052604060c020805460443580821015610afc57600080fd5b80820390509050815550600860243560e05260c052604060c0208054604435818183011015610b2a57600080fd5b80820190509050815550600960043560e05260c052604060c0203360e05260c052604060c020805460443580821015610b6257600080fd5b808203905090508155506044356102a0526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206102a0a3600160005260206000f350005b63095ea7b36000511415610c37573415610bc657600080fd5b6004356020518110610bd757600080fd5b5060243560093360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b6340c10f196000511415610d19573415610c5057600080fd5b6004356020518110610c6157600080fd5b50600b543314610c7057600080fd5b600060043518610c7f57600080fd5b60043561014052610140516006580161078c565b600050600a8054602435818183011015610cac57600080fd5b80820190509050815550600860043560e05260c052604060c0208054602435818183011015610cda57600080fd5b808201905090508155506024356101a05260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206101a0a3005b600015610df5575b61018052610140526101605260006101405118610d3d57600080fd5b610140516101605161018051610140516101c0526101c0516006580161078c565b610180526101605261014052600050600a80546101605180821015610d8257600080fd5b8082039050905081555060086101405160e05260c052604060c02080546101605180821015610db057600080fd5b8082039050905081555061016051610220526000610140517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610220a361018051565b6342966c686000511415610e30573415610e0e57600080fd5b336101405260043561016052610160516101405160065801610d21565b600050005b6379cc67906000511415610ee4573415610e4957600080fd5b6004356020518110610e5a57600080fd5b503361014052610140516006580161078c565b600050600960043560e05260c052604060c0203360e05260c052604060c020805460243580821015610e9e57600080fd5b808203905090508155506101405161016051610180516004356101c0526024356101e0526101e0516101c05160065801610d21565b610180526101605261014052600050005b6306fdde036000511415610f98573415610efd57600080fd5b60008060c052602060c020610180602082540161012060006003818352015b82610120516020021115610f2f57610f51565b61012051850154610120516020028501525b8151600101808352811415610f1c575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b41600051141561104c573415610fb157600080fd5b60018060c052602060c020610180602082540161012060006002818352015b82610120516020021115610fe357611005565b61012051850154610120516020028501525b8151600101808352811415610fd0575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b63313ce567600051141561107357341561106557600080fd5b60025460005260206000f350005b63997664d7600051141561109a57341561108c57600080fd5b60035460005260206000f350005b630f03702860005114156110c15734156110b357600080fd5b60045460005260206000f350005b6332f818fd60005114156110e85734156110da57600080fd5b60055460005260206000f350005b6399058240600051141561110f57341561110157600080fd5b60065460005260206000f350005b634a9a8aa8600051141561113657341561112857600080fd5b60075460005260206000f350005b6370a08231600051141561117d57341561114f57600080fd5b600435602051811061116057600080fd5b50600860043560e05260c052604060c0205460005260206000f350005b633940e9ee60005114156111a457341561119657600080fd5b600a5460005260206000f350005b630754617260005114156111cb5734156111bd57600080fd5b600b5460005260206000f350005b633cbcb74b60005114156112125734156111e457600080fd5b60043560205181106111f557600080fd5b50600c60043560e05260c052604060c0205460005260206000f350005b5b60006000fd5b61000461121d0361000460003961000461121d036000f3",
"deployedBytecode": "0x600436101561000d57611213565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052637c6c400b60005114156103285734156100ba57600080fd5b60606004356004016101403760406004356004013511156100da57600080fd5b60406024356004016101c03760206024356004013511156100fa57600080fd5b608435602051811061010b57600080fd5b506308c379a0610220526020610240526029610260527f43616e6e6f7420696e697469616c697a6520636f6e7472616374206d6f726520610280527f7468616e206f6e636500000000000000000000000000000000000000000000006102a05261026050600b541561017e57608461023cfd5b606435604e6044351061019057600080fd5b604435600a0a80820282158284830414176101aa57600080fd5b809050905090506102e05261014080600060c052602060c020602082510161012060006003818352015b826101205160200211156101e757610209565b61012051602002850151610120518501555b81516001018083528114156101d4575b5050505050506101c080600160c052602060c020602082510161012060006002818352015b8261012051602002111561024157610263565b61012051602002850151610120518501555b815160010180835281141561022e575b5050505050506044356002556102e05160083360e05260c052604060c020556102e051600a5533600b5560843560065560206103a0604463095ea7b36103005230610320527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6103405261031c60006006545af16102e057600080fd5b601f3d116102ed57600080fd5b6000506103a0506102e0516103c0523360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206103c0a3005b6318160ddd600051141561034f57341561034157600080fd5b600a5460005260206000f350005b63dd62ed3e60005114156103b657341561036857600080fd5b600435602051811061037957600080fd5b50602435602051811061038b57600080fd5b50600960043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b600015610446575b6101605261014052600354600c6101405160e05260c052604060c02054808210156103e857600080fd5b8082039050905060086101405160e05260c052604060c02054808202821582848304141761041557600080fd5b8090509050905069d3c21bcecceda1000000808061043257600080fd5b820490509050600052600051610160515650005b600015610595575b61018052610140526101605261016051151561046a5761018051565b602061028060646323b872dd6101c052610140516101e052306102005261016051610220526101dc60006006545af16104a257600080fd5b601f3d116104af57600080fd5b60005061028050600380546101605169d3c21bcecceda100000080820282158284830414176104dd57600080fd5b80905090509050600a5460083060e05260c052604060c020548082101561050357600080fd5b80820390509050808061051557600080fd5b82049050905081818301101561052a57600080fd5b80820190509050815550600580546101605181818301101561054b57600080fd5b80820190509050815550610160516102a0526003546102c052610140517f7a04e90c865097731fd2a22aa43af331b1b11bcabe30590c7c1faf8b987e45a860406102a0a261018051565b633243c79160005114156105d05734156105ae57600080fd5b33610140526004356101605261016051610140516006580161044e565b600050005b6000156106a7575b61014052602061020060246370a0823161018052306101a05261019c6006545afa61060257600080fd5b601f3d1161060f57600080fd5b600050610200516005546004548082101561062957600080fd5b808203905090508082101561063d57600080fd5b80820390509050610160526101405161016051610180516101a0516101c0516101e051610200513061024052610160516102605261026051610240516006580161044e565b610200526101e0526101c0526101a05261018052610160526101405260005061014051565b63888b042f60005114156107335734156106c057600080fd5b60206101c060246370a0823161014052306101605261015c6006545afa6106e657600080fd5b601f3d116106f357600080fd5b6000506101c0516005546004548082101561070d57600080fd5b808203905090508082101561072157600080fd5b8082039050905060005260206000f350005b6265318b600051141561078457341561074b57600080fd5b600435602051811061075c57600080fd5b506004356101405261014051600658016103be565b6101a0526101a05160005260206000f350005b6000156108d4575b6101605261014052306101405114156107a55761016051565b6101405161016051600658016105d8565b61016052610140526000506101405161016051610180516101a0516101c051610140516102005261020051600658016103be565b610260526101c0526101a052610180526101605261014052610260516101c052600354600c6101405160e05260c052604060c0205560006101c05118156108ce576020610320604463a9059cbb61028052610140516102a0526101c0516102c05261029c60006006545af161085e57600080fd5b601f3d1161086b57600080fd5b60005061032050600480546101c05181818301101561088957600080fd5b808201905090508155506101c0516103405260035461036052610140517f212c5c75ed4425b407ddf7fdba72d846fda739fc762929aab1e88fb9ee3ee4c86040610340a25b61016051565b63668038e060005114156109045734156108ed57600080fd5b3361014052610140516006580161078c565b600050005b63a9059cbb6000511415610a0a57341561091d57600080fd5b600435602051811061092e57600080fd5b503361014052610140516006580161078c565b6000506101405161016051610180516004356101c0526101c0516006580161078c565b61018052610160526101405260005060083360e05260c052604060c02080546024358082101561099357600080fd5b80820390509050815550600860043560e05260c052604060c02080546024358181830110156109c157600080fd5b8082019050905081555060243561022052600435337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610220a3600160005260206000f350005b6323b872dd6000511415610bad573415610a2357600080fd5b6004356020518110610a3457600080fd5b506024356020518110610a4657600080fd5b5060043561014052610140516006580161078c565b6000506101405161016051610180516024356101c0526101c0516006580161078c565b6101805261016052610140526000506101405161016051610180516101a0516101c0516101e051610200513361024052610240516006580161078c565b610200526101e0526101c0526101a052610180526101605261014052600050600860043560e05260c052604060c020805460443580821015610afc57600080fd5b80820390509050815550600860243560e05260c052604060c0208054604435818183011015610b2a57600080fd5b80820190509050815550600960043560e05260c052604060c0203360e05260c052604060c020805460443580821015610b6257600080fd5b808203905090508155506044356102a0526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206102a0a3600160005260206000f350005b63095ea7b36000511415610c37573415610bc657600080fd5b6004356020518110610bd757600080fd5b5060243560093360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b6340c10f196000511415610d19573415610c5057600080fd5b6004356020518110610c6157600080fd5b50600b543314610c7057600080fd5b600060043518610c7f57600080fd5b60043561014052610140516006580161078c565b600050600a8054602435818183011015610cac57600080fd5b80820190509050815550600860043560e05260c052604060c0208054602435818183011015610cda57600080fd5b808201905090508155506024356101a05260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206101a0a3005b600015610df5575b61018052610140526101605260006101405118610d3d57600080fd5b610140516101605161018051610140516101c0526101c0516006580161078c565b610180526101605261014052600050600a80546101605180821015610d8257600080fd5b8082039050905081555060086101405160e05260c052604060c02080546101605180821015610db057600080fd5b8082039050905081555061016051610220526000610140517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610220a361018051565b6342966c686000511415610e30573415610e0e57600080fd5b336101405260043561016052610160516101405160065801610d21565b600050005b6379cc67906000511415610ee4573415610e4957600080fd5b6004356020518110610e5a57600080fd5b503361014052610140516006580161078c565b600050600960043560e05260c052604060c0203360e05260c052604060c020805460243580821015610e9e57600080fd5b808203905090508155506101405161016051610180516004356101c0526024356101e0526101e0516101c05160065801610d21565b610180526101605261014052600050005b6306fdde036000511415610f98573415610efd57600080fd5b60008060c052602060c020610180602082540161012060006003818352015b82610120516020021115610f2f57610f51565b61012051850154610120516020028501525b8151600101808352811415610f1c575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b41600051141561104c573415610fb157600080fd5b60018060c052602060c020610180602082540161012060006002818352015b82610120516020021115610fe357611005565b61012051850154610120516020028501525b8151600101808352811415610fd0575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b63313ce567600051141561107357341561106557600080fd5b60025460005260206000f350005b63997664d7600051141561109a57341561108c57600080fd5b60035460005260206000f350005b630f03702860005114156110c15734156110b357600080fd5b60045460005260206000f350005b6332f818fd60005114156110e85734156110da57600080fd5b60055460005260206000f350005b6399058240600051141561110f57341561110157600080fd5b60065460005260206000f350005b634a9a8aa8600051141561113657341561112857600080fd5b60075460005260206000f350005b6370a08231600051141561117d57341561114f57600080fd5b600435602051811061116057600080fd5b50600860043560e05260c052604060c0205460005260206000f350005b633940e9ee60005114156111a457341561119657600080fd5b600a5460005260206000f350005b630754617260005114156111cb5734156111bd57600080fd5b600b5460005260206000f350005b633cbcb74b60005114156112125734156111e457600080fd5b60043560205181106111f557600080fd5b50600c60043560e05260c052604060c0205460005260206000f350005b5b60006000fd",
"source": "from vyper.interfaces import ERC20\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nevent ClaimDividends:\n    to: indexed(address)\n    value: uint256\n    totalDividends: uint256\n\nevent DistributeDividends:\n    sender: indexed(address)\n    value: uint256\n    totalDividends: uint256\n\nname: public(String[64])\nsymbol: public(String[32])\ndecimals: public(uint256)\ntotalDividends: public(uint256)\ntotalClaimedTokenDividends: public(uint256)\ntotalTokenDividends: public(uint256)\ndividend_token: public(address)\nwithdraw_address: public(address)\n\nbalanceOf: public(HashMap[address, uint256])\nallowances: HashMap[address, HashMap[address, uint256]]\ntotal_supply: public(uint256)\nminter: public(address)\n\nPOINT_MULTIPLIER: constant(uint256) = 10 ** 24\n\nlastDividends: public(HashMap[address, uint256])\n\n@external\ndef initializeERC20(\n    _name: String[64], \n    _symbol: String[32], \n    _decimals: uint256, \n    _supply: uint256, \n    _dividend_token: address,\n):\n    assert self.minter == ZERO_ADDRESS, \"Cannot initialize contract more than once\"\n    init_supply: uint256 = _supply * 10 ** _decimals\n    self.name = _name\n    self.symbol = _symbol\n    self.decimals = _decimals\n    self.balanceOf[msg.sender] = init_supply\n    self.total_supply = init_supply\n    self.minter = msg.sender\n    self.dividend_token = _dividend_token\n    ERC20(self.dividend_token).approve(self, MAX_UINT256)\n    log Transfer(ZERO_ADDRESS, msg.sender, init_supply)\n\n@view\n@external\ndef totalSupply() -> uint256:\n    \"\"\"\n    @dev Total number of tokens in existence.\n    \"\"\"\n    return self.total_supply\n\n@view\n@external\ndef allowance(_owner : address, _spender : address) -> uint256:\n    \"\"\"\n    @dev Function to check the amount of tokens that an owner allowed to a spender.\n    @param _owner The address which owns the funds.\n    @param _spender The address which will spend the funds.\n    @return An uint256 specifying the amount of tokens still available for the spender.\n    \"\"\"\n    return self.allowances[_owner][_spender]\n\n@view\n@internal\ndef _dividendsOf(_owner: address) -> uint256:\n    return (self.totalDividends - self.lastDividends[_owner]) * self.balanceOf[_owner] / POINT_MULTIPLIER\n\n@internal\ndef _distributeDividends(_from: address, _value: uint256):\n    if _value == 0:\n        return\n    ERC20(self.dividend_token).transferFrom(_from, self, _value)\n    # Ignore whatever the contract balance is because the contract can't claim dividends\n    self.totalDividends += _value * POINT_MULTIPLIER / (self.total_supply - self.balanceOf[self])\n    self.totalTokenDividends += _value\n    log DistributeDividends(_from, _value, self.totalDividends)\n\n@external\ndef distributeDividends(_value: uint256):\n    self._distributeDividends(msg.sender, _value)\n\n@internal\ndef _distributeExcessBalance():\n    \"\"\"\n    @dev    Withdraw excess tokens in the contract. It's possible that excess tokens, \n            via dividends or some other means, will accrue in the contract. This provides\n            an escape hatch for those funds.\n    @param _value The amount to be withdrawn\n    \"\"\"\n    excess_balance: uint256 = ERC20(self.dividend_token).balanceOf(self) - (self.totalTokenDividends - self.totalClaimedTokenDividends)\n    self._distributeDividends(self, excess_balance)\n\n@view\n@external\ndef getExcessBalance() -> uint256:\n    return ERC20(self.dividend_token).balanceOf(self) - (self.totalTokenDividends - self.totalClaimedTokenDividends)\n    \n@view\n@external\ndef dividendsOf(_owner: address) -> uint256:\n    return self._dividendsOf(_owner)\n\n@internal\ndef _claimDividends(_to: address):\n    if _to == self:\n        return\n    self._distributeExcessBalance()\n    dividends: uint256 = self._dividendsOf(_to)\n    self.lastDividends[_to] = self.totalDividends   \n    if dividends != 0: # Avoids infinite loop\n        ERC20(self.dividend_token).transfer(_to, dividends)\n        self.totalClaimedTokenDividends += dividends\n        log ClaimDividends(_to, dividends, self.totalDividends)\n\n@external\ndef claimDividends():\n    self._claimDividends(msg.sender)\n\n@external\ndef transfer(_to : address, _value : uint256) -> bool:\n    \"\"\"\n    @dev Transfer token for a specified address\n    @param _to The address to transfer to.\n    @param _value The amount to be transferred.\n    \"\"\"\n    self._claimDividends(msg.sender)\n    self._claimDividends(_to)\n    self.balanceOf[msg.sender] -= _value\n    self.balanceOf[_to] += _value\n    log Transfer(msg.sender, _to, _value)\n    return True\n\n@external\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\n    \"\"\"\n     @dev Transfer tokens from one address to another.\n     @param _from address The address which you want to send tokens from\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amount of tokens to be transferred\n    \"\"\"\n    self._claimDividends(_from)\n    self._claimDividends(_to)\n    self._claimDividends(msg.sender)\n    self.balanceOf[_from] -= _value\n    self.balanceOf[_to] += _value\n    self.allowances[_from][msg.sender] -= _value\n    log Transfer(_from, _to, _value)\n    return True\n\n@external\ndef approve(_spender : address, _value : uint256) -> bool:\n    \"\"\"\n    @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n         Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    \"\"\"\n    self.allowances[msg.sender][_spender] = _value\n    log Approval(msg.sender, _spender, _value)\n    return True\n\n@external\ndef mint(_to: address, _value: uint256):\n    \"\"\"\n    @dev Mint an amount of the token and assigns it to an account.\n         This encapsulates the modification of balances such that the\n         proper events are emitted.\n    @param _to The account that will receive the created tokens.\n    @param _value The amount that will be created.\n    \"\"\"\n    assert msg.sender == self.minter\n    assert _to != ZERO_ADDRESS\n    self._claimDividends(_to)\n    self.total_supply += _value\n    self.balanceOf[_to] += _value\n    log Transfer(ZERO_ADDRESS, _to, _value)\n\n\n@internal\ndef _burn(_to: address, _value: uint256):\n    \"\"\"\n    @dev Internal function that burns an amount of the token of a given\n         account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    \"\"\"\n    assert _to != ZERO_ADDRESS\n    self._claimDividends(_to)\n    self.total_supply -= _value\n    self.balanceOf[_to] -= _value\n    log Transfer(_to, ZERO_ADDRESS, _value)\n\n\n@external\ndef burn(_value: uint256):\n    \"\"\"\n    @dev Burn an amount of the token of msg.sender.\n    @param _value The amount that will be burned.\n    \"\"\"\n    self._burn(msg.sender, _value)\n\n\n@external\ndef burnFrom(_to: address, _value: uint256):\n    \"\"\"\n    @dev Burn an amount of the token from a given account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    \"\"\"\n    self._claimDividends(msg.sender)\n    self.allowances[_to][msg.sender] -= _value\n    self._burn(_to, _value)",
"sourcePath": "/home/personal/Desktop/Projects/SpotSwapExchange-V1/contracts/DividendERC20.vy",
"compiler": {
  "name": "vyper",
  "version": "0.2.4+commit.7949850"
},
"networks": {
  "1601302774700": {
    "events": {
      "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
        "name": "Transfer",
        "inputs": [
          {
            "type": "address",
            "name": "sender",
            "indexed": true
          },
          {
            "type": "address",
            "name": "receiver",
            "indexed": true
          },
          {
            "type": "uint256",
            "name": "value",
            "indexed": false
          }
        ],
        "anonymous": false,
        "type": "event"
      },
      "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
        "name": "Approval",
        "inputs": [
          {
            "type": "address",
            "name": "owner",
            "indexed": true
          },
          {
            "type": "address",
            "name": "spender",
            "indexed": true
          },
          {
            "type": "uint256",
            "name": "value",
            "indexed": false
          }
        ],
        "anonymous": false,
        "type": "event"
      },
      "0x212c5c75ed4425b407ddf7fdba72d846fda739fc762929aab1e88fb9ee3ee4c8": {
        "name": "ClaimDividends",
        "inputs": [
          {
            "type": "address",
            "name": "to",
            "indexed": true
          },
          {
            "type": "uint256",
            "name": "value",
            "indexed": false
          },
          {
            "type": "uint256",
            "name": "totalDividends",
            "indexed": false
          }
        ],
        "anonymous": false,
        "type": "event"
      },
      "0x7a04e90c865097731fd2a22aa43af331b1b11bcabe30590c7c1faf8b987e45a8": {
        "name": "DistributeDividends",
        "inputs": [
          {
            "type": "address",
            "name": "sender",
            "indexed": true
          },
          {
            "type": "uint256",
            "name": "value",
            "indexed": false
          },
          {
            "type": "uint256",
            "name": "totalDividends",
            "indexed": false
          }
        ],
        "anonymous": false,
        "type": "event"
      }
    },
    "links": {},
    "address": "0xbBdf8085E521bCF8989918E3954d0CcDdC7DF28D",
    "transactionHash": "0x40992031f58203c55939f8d88a807419ee4263ddf75db01b2126ae1884db0701"
  }
},
"schemaVersion": "3.2.4",
"updatedAt": "2020-09-28T14:20:09.066Z",
"networkType": "ethereum"
}